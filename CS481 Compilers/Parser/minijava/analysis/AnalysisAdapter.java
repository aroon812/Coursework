/* This file was generated by SableCC (http://www.sablecc.org/). */

package minijava.analysis;

import java.util.*;
import minijava.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProgram(AProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMainClass(AMainClass node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArray(AArray node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABaseDeclClassDecl(ABaseDeclClassDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExtendsDeclClassDecl(AExtendsDeclClassDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABaseDecl(ABaseDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExtendsDecl(AExtendsDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarDecl(AVarDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanType(ABooleanType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntarrayType(AIntarrayType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAObjectType(AObjectType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMethodDecl(AMethodDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormalList(AFormalList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormalsTail(AFormalsTail node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormal(AFormal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlockStmt(ABlockStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfStmt(AIfStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileStmt(AWhileStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrintStmt(APrintStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAsmtStmt(AAsmtStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayAsmtStmt(AArrayAsmtStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlock(ABlock node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATrueBool(ATrueBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFalseBool(AFalseBool node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATailExplist(ATailExplist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAHeadExplist(AHeadExplist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEmptyExplist(AEmptyExplist node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADotopFunction(ADotopFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALengthFunction(ALengthFunction node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndExp(AAndExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotandExp(ANotandExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALessthanLessthan(ALessthanLessthan node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotlessthanLessthan(ANotlessthanLessthan node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusMinusplus(AMinusMinusplus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusMinusplus(APlusMinusplus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusplusMinusplus(AMinusplusMinusplus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultMult(AMultMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMult1Mult(AMult1Mult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotNotexp(ANotNotexp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANot1Notexp(ANot1Notexp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALiteralBracdot(ALiteralBracdot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAThisBracdot(AThisBracdot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayindexBracdot(AArrayindexBracdot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFunctionBracdot(AFunctionBracdot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArraydeclBracdot(AArraydeclBracdot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAObjectdeclBracdot(AObjectdeclBracdot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParensBracdot(AParensBracdot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParensParens(AParensParens node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdLiteral(AIdLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumLiteral(ANumLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolLiteral(ABoolLiteral node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAsmt(TAsmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEquals(TEquals node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLparen(TLparen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRparen(TRparen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLbracket(TLbracket node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRbracket(TRbracket node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLbrace(TLbrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRbrace(TRbrace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolean(TBoolean node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTClas(TClas node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExtends(TExtends node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLength(TLength node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMain(TMain node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNew(TNew node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPublic(TPublic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStatic(TStatic node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPrint(TPrint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThis(TThis node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNum(TNum node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhitespace(TWhitespace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlockComment(TBlockComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEolComment(TEolComment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
