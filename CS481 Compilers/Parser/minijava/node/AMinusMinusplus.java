/* This file was generated by SableCC (http://www.sablecc.org/). */

package minijava.node;

import minijava.analysis.*;

@SuppressWarnings("nls")
public final class AMinusMinusplus extends PMinusplus
{
    private PMinusplus _minusplus_;
    private TMinus _minus_;
    private PMult _mult_;

    public AMinusMinusplus()
    {
        // Constructor
    }

    public AMinusMinusplus(
        @SuppressWarnings("hiding") PMinusplus _minusplus_,
        @SuppressWarnings("hiding") TMinus _minus_,
        @SuppressWarnings("hiding") PMult _mult_)
    {
        // Constructor
        setMinusplus(_minusplus_);

        setMinus(_minus_);

        setMult(_mult_);

    }

    @Override
    public Object clone()
    {
        return new AMinusMinusplus(
            cloneNode(this._minusplus_),
            cloneNode(this._minus_),
            cloneNode(this._mult_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMinusMinusplus(this);
    }

    public PMinusplus getMinusplus()
    {
        return this._minusplus_;
    }

    public void setMinusplus(PMinusplus node)
    {
        if(this._minusplus_ != null)
        {
            this._minusplus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._minusplus_ = node;
    }

    public TMinus getMinus()
    {
        return this._minus_;
    }

    public void setMinus(TMinus node)
    {
        if(this._minus_ != null)
        {
            this._minus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._minus_ = node;
    }

    public PMult getMult()
    {
        return this._mult_;
    }

    public void setMult(PMult node)
    {
        if(this._mult_ != null)
        {
            this._mult_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._mult_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._minusplus_)
            + toString(this._minus_)
            + toString(this._mult_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._minusplus_ == child)
        {
            this._minusplus_ = null;
            return;
        }

        if(this._minus_ == child)
        {
            this._minus_ = null;
            return;
        }

        if(this._mult_ == child)
        {
            this._mult_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._minusplus_ == oldChild)
        {
            setMinusplus((PMinusplus) newChild);
            return;
        }

        if(this._minus_ == oldChild)
        {
            setMinus((TMinus) newChild);
            return;
        }

        if(this._mult_ == oldChild)
        {
            setMult((PMult) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
